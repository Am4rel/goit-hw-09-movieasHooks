{"version":3,"sources":["utils/fetch.js","utils/movieList.js","Components/MovieInfoCast.js","Components/MovieInfoReviews.js","Pages/MovieInfo.js"],"names":["BASE_URL","AUTH_TOKEN","fetchType","a","movieId","query","fetchTypes","trends","search","filmInfo","actors","reviews","similar","axios","data","fetch","MovieList","props","className","movies","map","id","title","name","poster_path","imgUrl","to","pathname","state","from","location","src","alt","MovieInfoCast","useState","cast","setCast","useEffect","match","params","then","response","catch","error","console","log","length","profile_path","character","cast_id","actorImg","MovieInfoReviews","setReviews","results","author","content","MovieInfo","setTitle","userScore","setUserScore","overview","setOverview","genres","setGenres","date","setDate","poster","setPoster","setSimilar","similarLastIndex","setSimilarLastIndex","productionYear","split","vote_average","release_date","genresList","genre","push","posterImg","width","type","onClick","history","disabled","slice","activeClassName","url","path","component"],"mappings":"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","file":"static/js/movie-page.79e9ad4f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst AUTH_TOKEN = \"4e3ee43a33940cdc2c536aa8c24e20b3\";\r\n\r\n async function fetch (fetchType, movieId = null, query=null) {\r\n    const fetchTypes = {\r\n        trends: `${BASE_URL}trending/all/day?api_key=${AUTH_TOKEN}`,\r\n        search: `${BASE_URL}search/movie?api_key=${AUTH_TOKEN}&query=${query}&page=1`,\r\n        filmInfo: `${BASE_URL}movie/${movieId}?api_key=${AUTH_TOKEN}`,\r\n        actors: `${BASE_URL}movie/${movieId}/credits?api_key=${AUTH_TOKEN}`,\r\n        reviews: `${BASE_URL}movie/${movieId}/reviews?api_key=${AUTH_TOKEN}`,\r\n        similar: `${BASE_URL}movie/${movieId}/similar?api_key=${AUTH_TOKEN}`,\r\n    };\r\n\r\n     const data = await axios(fetchTypes[fetchType]);\r\n\r\n    return data;\r\n};\r\n\r\nexport default fetch;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieList = (props) => {\r\n    return (\r\n                <ul className=\"listBox\">\r\n                    {props.movies.map(({ id, title, name, poster_path }) => {\r\n                        const imgUrl = poster_path ? `https://image.tmdb.org/t/p/w200${poster_path}` : \"https://abletrektours.com/wp-content/uploads/2020/01/Scandinavian-Mystery-e1578001346789.png\";\r\n                        return <li key={id} className=\"listItem\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/movies/${id}`,\r\n                                    state: { from: props.location },\r\n                                }}>\r\n                                <img src={imgUrl} alt={title ? title : name} />\r\n                                <p>{title ? title : name}</p>\r\n                            </Link></li>\r\n                    })}\r\n                </ul>\r\n            )\r\n}\r\n\r\nexport default MovieList;   ","import fetch from '../utils/fetch';\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst MovieInfoCast = (props) => {\r\n    const [cast, setCast] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"actors\", props.match.params.movieId).then(response => setCast(response.data.cast)).catch(error => console.log(error));\r\n    }, [props.match.params.movieId]);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"title\">Cast:</h2>\r\n            {cast.length > 0 &&\r\n                <ul className=\"listBox\">\r\n                    {cast.map(({ profile_path, name, character, cast_id }) => {\r\n                        const actorImg = profile_path ? `https://image.tmdb.org/t/p/w200${profile_path}` : \"https://www.kstech.com//images/easyblog_images/4072/incognito_mode_400.jpg\"\r\n                        return <li key={cast_id} className=\"listItem\">\r\n                            <img src={actorImg} alt={name}/>\r\n                            <p>{name}</p>\r\n                            <p>Character: {character}</p>\r\n                        </li>\r\n                    })}\r\n                </ul>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieInfoCast;","import React, { useState, useEffect } from 'react';\r\nimport fetch from '../utils/fetch';\r\n\r\nconst MovieInfoReviews = (props) => {\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"reviews\", props.match.params.movieId).then(response => setReviews(response.data.results)).catch(error => console.log(error));\r\n    }, [props.match.params.movieId])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"title\">Reviews:</h2>\r\n            {reviews.length > 0 ?\r\n                <ul>\r\n                    {reviews.map(({ author, content }) => {\r\n                        return <li key={content}>\r\n                            <p>Author: {author}</p>\r\n                            <p>{content}</p>\r\n                        </li>\r\n                    })}\r\n                </ul> :\r\n                <p>We don't have any review of this film yet. You can be first!</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieInfoReviews;","import React, { useEffect, useState } from 'react';\r\nimport fetch from '../utils/fetch';\r\nimport MovieInfoCast from '../Components/MovieInfoCast';\r\nimport MovieInfoReviews from '../Components/MovieInfoReviews';\r\nimport MovieList from '../utils/movieList';\r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\nimport '../Styles/moviePage.css';\r\n\r\n\r\nconst MovieInfo = (props) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [userScore, setUserScore] = useState(0);\r\n    const [overview, setOverview] = useState(\"\");\r\n    const [genres, setGenres] = useState([]);\r\n    const [date, setDate] = useState(\"\");\r\n    const [poster, setPoster] = useState(\"\");\r\n    const [similar, setSimilar] = useState([]);\r\n    const [similarLastIndex, setSimilarLastIndex] = useState(7);\r\n    const productionYear = date.split(\"-\")[0];\r\n\r\n    useEffect(() => {\r\n        fetch(\"filmInfo\", props.match.params.movieId).then(response => {\r\n            const { title, overview, vote_average, genres, release_date, poster_path } = response.data;\r\n            const genresList=[]\r\n            genres.map((genre) => { return genresList.push(genre.name) })\r\n            const posterImg = poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : \"https://image.flaticon.com/icons/png/512/2790/2790961.png\"\r\n\r\n            setTitle(title);\r\n            setUserScore(vote_average);\r\n            setOverview(overview);\r\n            setGenres(genresList);\r\n            setDate(release_date);\r\n            setPoster(posterImg);\r\n        }).catch(error => console.log(error));\r\n\r\n        fetch(\"similar\", props.match.params.movieId).then(response => setSimilar(response.data.results)).catch(error => console.log(error));\r\n    }, [props.match.params.movieId]);\r\n\r\n    const onBackButtonClick = () => {\r\n        const { state } = props.location;\r\n\r\n        if (state) {\r\n            props.history.push(state.from);\r\n            return;\r\n        };\r\n        \r\n        props.history.push({\r\n            pathname: '/',\r\n        });\r\n    }\r\n\r\n    const onNextButtonClick = () => {\r\n        similarLastIndex < 19 && setSimilarLastIndex(similarLastIndex + 7 );\r\n    }\r\n\r\n    const onPreviousButtonClick = () => {\r\n        similarLastIndex > 8 && setSimilarLastIndex(similarLastIndex - 7 );\r\n    }\r\n\r\n        \r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"filmInfoBox\">\r\n                    <img src={poster} alt={`${title} poster`} width=\"300\" />\r\n                    <div className=\"filmInfoBoxMain\">\r\n                        <button type=\"button\" onClick={onBackButtonClick}>{`<-- Back`}</button>\r\n                        <h2 className=\"filmInfoBoxItem\">{title} ({productionYear})</h2>\r\n                        <p className=\"filmInfoBoxItem\">User score: {userScore}</p>\r\n                        <h4 className=\"filmInfoBoxItem\">Overwiev</h4>\r\n                        <p className=\"filmInfoBoxItem\">{overview ? overview : <span>Here should be an overview, but we don't have it yet...</span>}</p>\r\n                        <h4 className=\"filmInfoBoxItem\">Genres</h4>\r\n                        <ul className=\"filmInfoBoxItem\">\r\n                            {genres.map(genre => <li key={genre}>{genre}</li>)}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h2 className=\"title\">Similar movies:</h2>\r\n                    <div className=\"similarMoviesBox\">\r\n                        <button type=\"button\" onClick={onPreviousButtonClick} disabled={similarLastIndex < 8}>Previous</button>\r\n                        <MovieList movies={similar.slice(similarLastIndex - 7, similarLastIndex)} location={props.location} />\r\n                        <button type=\"button\" onClick={onNextButtonClick} disabled={similarLastIndex > 20}>Next</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"additionalInfo\">\r\n                    <h2 className=\"title\">Additional information:</h2>\r\n                    <ul className=\"additionalInfoList\">\r\n                        <li>\r\n                            <NavLink  className=\"NavLink\" activeClassName=\"NavLink-active\"\r\n                                to={{\r\n                                    pathname: `${props.match.url}/cast`,\r\n                                    state: props.location.state && { from: props.location.state.from },\r\n                                }}>Cast\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink  className=\"NavLink\" activeClassName=\"NavLink-active\"\r\n                                to={{pathname: `${props.match.url}/reviews`,\r\n                                    state: props.location.state && { from: props.location.state.from },\r\n                                }}>Reviews\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n            \r\n                </div>\r\n            </div>\r\n            <Switch>\r\n                <Route path={`${props.match.path}/cast`} component={MovieInfoCast} />\r\n                <Route path={`${props.match.path}/reviews`} component={MovieInfoReviews} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;"],"sourceRoot":""}