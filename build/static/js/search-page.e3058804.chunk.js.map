{"version":3,"sources":["utils/fetch.js","utils/movieList.js","Pages/SearchMovie.js"],"names":["BASE_URL","AUTH_TOKEN","fetchType","a","movieId","query","fetchTypes","trends","search","filmInfo","actors","reviews","similar","axios","data","fetch","MovieList","props","className","movies","map","id","title","name","poster_path","imgUrl","to","pathname","state","from","location","src","alt","SearchMovie","useState","split","searchQuery","setSearchQuery","movieList","setMovieList","filmSearch","then","response","results","useEffect","onSubmit","e","preventDefault","history","push","match","url","type","onChange","target","value"],"mappings":"uLAEMA,EAAW,gCACXC,EAAa,mC,4CAElB,WAAsBC,GAAtB,iCAAAC,EAAA,6DAAiCC,EAAjC,+BAA2C,KAAMC,EAAjD,+BAAuD,KAC9CC,EAAa,CACfC,OAAO,GAAD,OAAKP,EAAL,oCAAyCC,GAC/CO,OAAO,GAAD,OAAKR,EAAL,gCAAqCC,EAArC,kBAAyDI,EAAzD,WACNI,SAAS,GAAD,OAAKT,EAAL,iBAAsBI,EAAtB,oBAAyCH,GACjDS,OAAO,GAAD,OAAKV,EAAL,iBAAsBI,EAAtB,4BAAiDH,GACvDU,QAAQ,GAAD,OAAKX,EAAL,iBAAsBI,EAAtB,4BAAiDH,GACxDW,QAAQ,GAAD,OAAKZ,EAAL,iBAAsBI,EAAtB,4BAAiDH,IAP/D,SAUuBY,IAAMP,EAAWJ,IAVxC,cAUUY,EAVV,yBAYUA,GAZV,4C,sBAecC,I,6ECpBf,uBAsBeC,IAnBG,SAACC,GACf,OACY,oBAAIC,UAAU,UAAd,SACKD,EAAME,OAAOC,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC5BC,EAASD,EAAW,yCAAqCA,GAAgB,+FAC/E,OAAO,oBAAaN,UAAU,WAAvB,SACH,eAAC,IAAD,CACIQ,GAAI,CACAC,SAAS,WAAD,OAAaN,GACrBO,MAAO,CAAEC,KAAMZ,EAAMa,WAH7B,UAKI,qBAAKC,IAAKN,EAAQO,IAAKV,GAAgBC,IACvC,4BAAID,GAAgBC,QAPZF,U,8GCoCzBY,UAtCK,SAAChB,GACjB,MAAsCiB,mBAASjB,EAAMa,SAAStB,OAAO2B,MAAM,KAAK,IAAhF,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAIMC,EAAa,WACfzB,YAAM,SAAU,KAAMqB,GAAaK,MAAK,SAAAC,GAAQ,OAAIH,EAAaG,EAAS5B,KAAK6B,aAgBnF,OALAC,qBAAU,WACoB,KAA1B3B,EAAMa,SAAStB,QAAiBgC,MAEjC,IAGC,qCACI,uBAAMK,SAfO,SAAAC,GACjBA,EAAEC,iBACFR,EAAa,IAEbtB,EAAM+B,QAAQC,KAAd,UAAsBhC,EAAMiC,MAAMC,IAAlC,kBAA+Cf,IAC/CI,KAUI,UACI,wBAAOtB,UAAU,OAAjB,0CAEI,uBAAOkC,KAAK,OAAOC,SAxBnB,SAAAP,GAAC,OAAIT,EAAeS,EAAEQ,OAAOC,aA0BjC,wBAAQH,KAAK,SAAb,6BAGuB,KAA1BnC,EAAMa,SAAStB,QAAiB,yCAAG,oBAAIU,UAAU,QAAd,yCAAsD,cAAC,IAAD,CAAWC,OAAQmB,EAAYR,SAAUb,EAAMa","file":"static/js/search-page.e3058804.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\nconst AUTH_TOKEN = \"4e3ee43a33940cdc2c536aa8c24e20b3\";\r\n\r\n async function fetch (fetchType, movieId = null, query=null) {\r\n    const fetchTypes = {\r\n        trends: `${BASE_URL}trending/all/day?api_key=${AUTH_TOKEN}`,\r\n        search: `${BASE_URL}search/movie?api_key=${AUTH_TOKEN}&query=${query}&page=1`,\r\n        filmInfo: `${BASE_URL}movie/${movieId}?api_key=${AUTH_TOKEN}`,\r\n        actors: `${BASE_URL}movie/${movieId}/credits?api_key=${AUTH_TOKEN}`,\r\n        reviews: `${BASE_URL}movie/${movieId}/reviews?api_key=${AUTH_TOKEN}`,\r\n        similar: `${BASE_URL}movie/${movieId}/similar?api_key=${AUTH_TOKEN}`,\r\n    };\r\n\r\n     const data = await axios(fetchTypes[fetchType]);\r\n\r\n    return data;\r\n};\r\n\r\nexport default fetch;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieList = (props) => {\r\n    return (\r\n                <ul className=\"listBox\">\r\n                    {props.movies.map(({ id, title, name, poster_path }) => {\r\n                        const imgUrl = poster_path ? `https://image.tmdb.org/t/p/w200${poster_path}` : \"https://abletrektours.com/wp-content/uploads/2020/01/Scandinavian-Mystery-e1578001346789.png\";\r\n                        return <li key={id} className=\"listItem\">\r\n                            <Link\r\n                                to={{\r\n                                    pathname: `/movies/${id}`,\r\n                                    state: { from: props.location },\r\n                                }}>\r\n                                <img src={imgUrl} alt={title ? title : name} />\r\n                                <p>{title ? title : name}</p>\r\n                            </Link></li>\r\n                    })}\r\n                </ul>\r\n            )\r\n}\r\n\r\nexport default MovieList;   ","import React, { useEffect, useState } from 'react';\r\nimport fetch from '../utils/fetch';\r\nimport MovieList from '../utils/movieList'\r\nimport '../Styles/Search.css';\r\n\r\n\r\nconst SearchMovie = (props) => {\r\n    const [searchQuery, setSearchQuery] = useState(props.location.search.split(\"=\")[1]);\r\n    const [movieList, setMovieList] = useState([]);\r\n\r\n    const onInput = e => setSearchQuery(e.target.value);\r\n\r\n    const filmSearch = () => {\r\n        fetch(\"search\", null, searchQuery).then(response => setMovieList(response.data.results));\r\n    }\r\n\r\n    const onFormSubmit = e => {\r\n        e.preventDefault();\r\n        setMovieList([]);\r\n        \r\n        props.history.push(`${props.match.url}?query=${searchQuery}`);\r\n        filmSearch();\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.location.search !== \"\" && filmSearch();\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onFormSubmit}>\r\n                <label className=\"form\">\r\n                    Enter the part of film title:\r\n                    <input type=\"text\" onChange={onInput}></input>\r\n                </label>\r\n                <button type=\"submit\">Search film!</button>\r\n            </form>\r\n            \r\n            {props.location.search !== \"\" && <> <h2 className=\"title\">Here's your search results:</h2><MovieList movies={movieList}  location={props.location} /></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchMovie;"],"sourceRoot":""}